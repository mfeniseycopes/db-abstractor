c
self.send(:human)
self
self.
thru_association
n
c
self.class.assoc_options
self.class
self
c
self.first.humanc
self.first.human
self.first.human.join(:house)
self.first.human
self.human
name
source_name
self.send(:human)
self.send(:human
self
through_name
thru_name
thru_association
c
n
c
@assoc_options
@assoc_options["hi"] = 5
c
n
self.assoc_options
self.assoc_optionsc
c
self.assoc_optionsc
self.assoc_options
self
c
name
association
c
self.to_s.downcase.singularize
self.to_s.singularize
self.to_s
self
n
c
self
self.class
c
House.first
association
n
options
name
n
self
c
association.model_classc
association.model_class.id
association.model_class
association
self
n
c
self
c
name
klass
c
n
options
noptions
n
custom_options
options
n
klass
self
c
Cat.first.owner_id
Cat.first
Cat.all
self.methods - "".methods
self.send(association.foreign_key)
association.primary_key
c
n
c
self.id
self
association.model_class.where(association.primary_key => self.owner_id)
association.foreign_key
association.primary_key
association.model_class.where(association.primary_key => self.id)
self
c
association
Human.new.new_method("meagan")
Human.new.wha("meagan")
wha("meagan")
wha
wha = association.model_class.send(:define_method, "new_method") do |name| puts name end
(association.model_class.methods - "".methods).sort
association.model_class.methods - "".methods
association.model_class.methods
association.model_class.send(:define_method, "new_method") do |name| puts name end
association.model_class.send(:define_method, new_method) do |name| puts name end
association.model_class.send(:define_method, new_method) do |name|
association.model_class.send(:define_method)
association.model_class.define_method(:hi)
association.model_class.send(:foreign_key)
association.foreign_key
association.model_class.foreign_key
association.model_class
association
c
self.methods - "".methods
c
self.methods - "".methods
self.methods
self
